---
  # We want this to run sometime after oc cluster up has come up, since we want
  # it to alter the permssions of the pv* directories it creates sometime after
  # startup.
  #
  # We've seen some permission errors testing certain containers with PVs
  # May be related to this issue:
  #   https://github.com/openshift/origin/issues/13496https://github.com/openshift/origin/issues/13496
  # Putting in a workaround for manually opening up the permissions
  - name: Add permissions for controller manager
    shell: "{{ oc_cmd }} adm policy add-cluster-role-to-user cluster-admin system:serviceaccount:kube-service-catalog:service-catalog-controller"
    when: ("v3.10" in origin_image_tag) or
          ("latest" in origin_image_tag)


  - name: Waiting 10 minutes for 'persistent-volume-setup' pod to complete to create PVs
    action:
      shell "{{ oc_cmd }}" get pods -n default | grep ^persistent-volume-setup | grep Completed
    register: wait_for_pv_setup_pod
    until: wait_for_pv_setup_pod.rc == 0
    retries: 60
    delay: 10

  - name: Adjust persistent volume permissions to be 777 to make testing easier
    file:
      path: "{{ persistent_vol_mount_point }}"
      mode: 0777
      recurse: true
    become: true

  - block:
    - block:
      - name: Workaround canary permissions issue
        shell: "{{ oc_cmd }} adm policy add-cluster-role-to-user cluster-admin system:anonymous"

      - name: Get current apiserver args and update them
        shell: "{{ oc_cmd }} export -n kube-service-catalog deployment apiserver -o json | python -c 'import json, sys; args=json.load(sys.stdin)[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"args\"]; print json.dumps(args)'"
        register: arglist

      - name: Use canary apiserver
        shell: "{{ oc_cmd }} patch -n kube-service-catalog deployment/apiserver -p '{\"spec\":{\"template\": {\"spec\": {\"containers\": [{\"name\":\"apiserver\",\"image\":\"{{ coalmine_svc_catalog}}\", \"command\": [\"/opt/services/service-catalog\"], \"args\": {{ arglist.stdout }} }]}}}}'"

      - name: Get current controller-manager args and update them
        shell: "{{ oc_cmd }} export -n kube-service-catalog deployment controller-manager -o json | python -c 'import json, sys; args=json.load(sys.stdin)[\"spec\"][\"template\"][\"spec\"][\"containers\"][0][\"args\"]; print json.dumps(args)'"
        register: arglist

      - name: Use canary controller-manager
        shell: "{{ oc_cmd }} patch -n kube-service-catalog deployment/controller-manager -p '{\"spec\":{\"template\": {\"spec\": {\"containers\": [{\"name\":\"controller-manager\",\"image\":\"{{ coalmine_svc_catalog}}\", \"command\": [\"/opt/services/service-catalog\"], \"args\": {{ arglist.stdout }} }]}}}}'"
      when: coalmine
    when: coalmine is defined
