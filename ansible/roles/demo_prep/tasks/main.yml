---
  - name: Template secret file to be created
    template:
      src: demo-secret.j2
      dest: /tmp/demo-secret.yml
      owner: root
      group: root
      mode: 0644
    register: demo_secret_result

  - name: Login as {{ cluster_user }}
    shell: "{{ oc_cmd }} login -u {{ cluster_user }} -p {{ cluster_user_password }}"

  - name: check if project exists
    shell: "{{ oc_cmd }} get project --no-headers=true | awk '{ print $1 }' | grep -E '^{{ demo_project_name }}( |$)' | cat"
    register: project

  - name: Create a new project for the demo '{{ demo_project_name }}'
    shell: "{{ oc_cmd }} new-project {{ demo_project_name }}"
    register: new_demo_project
    when: project.stdout.find( demo_project_name ) == -1

  - set_fact:
      secret_name: "{{ demo_project_name }}-secret"

  - name: check if secret exists
    shell: "{{ oc_cmd }} get secret --no-headers=true -n {{ demo_project_name }} | awk '{ print $1 }' | grep -E '^{{ secret_name }}( |$)' | cat"
    register: secret

  - name: Creating secret in project
    shell: "{{ oc_cmd }} create -f /tmp/demo-secret.yml"
    when: secret.stdout.find( secret_name ) == -1

  - name: initiate a build
    shell: "{{ oc_cmd }} new-app -n {{ demo_project_name }} centos/python-35-centos7~https://github.com/thesteve0/awsdemo/ --name=demoprep"

  - name: wait for deployment to complete
    shell: "{{ oc_cmd }} get -n {{ demo_project_name }} pod --no-headers=true -l 'app=demoprep' | awk '{ print $3 }'"
    register: demoprep_status
    until: "'Running' in demoprep_status.stdout"
    retries: 60
    delay: 5

  - name: delete deployment items
    shell: "{{ oc_cmd }} delete -n {{ demo_project_name }} {{ item }} demoprep"
    with_items:
      - svc
      - dc
      - bc

  - name: delete imagestreams
    shell: "{{ oc_cmd }} delete -n {{ demo_project_name }} is demoprep python-35-centos7"

  - name: check if the rds postgres demo instance exists
    shell: "{{ oc_cmd }} get instance -n {{ demo_project_name }} --no-headers=true | awk '{ print $1}' | grep -E '^rds-postgres( |$)' | cat"
    register: rds_demo_deployment

  - name: create rds apb resource file
    template:
      src: rds-instance.yml.j2
      dest: /tmp/rds-instance.yml
      owner: root
      group: root
      mode: 0644

  - name: create rds postgres demo instance
    shell: "{{ oc_cmd }} create -f /tmp/rds-instance.yml"
    when: deploy_rds_demo_instance and rds_demo_deployment.stdout.find( "rds-postgres" ) == -1
