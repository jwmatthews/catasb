---
  - name: Create "{{ asb_project }}" namespace
    shell: "{{ kubectl_cmd }} create ns {{ asb_project }}"

  - name: Curling ansible-service-broker-all.yaml
    get_url:
      url: "{{ k8s_asb_template_url }}"
      force: yes
      dest: "{{ local_target_asb_template }}"
    delegate_to: localhost
    become: true

  - name: Render k8s-ansible-service-broker.yaml.j2
    template:
      src: "{{ local_target_asb_template }}"
      dest: "{{ template_dest }}"
      owner: "{{ ansible_env.USER }}"
      mode: 0644

  - name: Running kubectl create on processed template
    shell: "{{ kubectl_cmd }} create -f /tmp/k8s-ansible-service-broker.yaml --namespace={{ asb_project }}"

  - name: Switch project to {{ asb_project }}
    shell: "{{ kubectl_cmd }} config set-context $(kubectl config current-context) --namespace={{ asb_project }}"

  - name: Create asb-cert tmp directory
    file:
      path: /tmp/asb-cert
      state: directory
    when: asb_ca_cert is not defined and asb_key is not defined

  - name: Creating asb-tls cert
    shell: openssl req -nodes -x509 -newkey rsa:4096 -keyout /tmp/asb-cert/key.pem -out /tmp/asb-cert/cert.pem -days 365 -subj "/CN=asb.ansible-service-broker.svc"
    when: asb_ca_cert is not defined and asb_key is not defined

  - name: Saving broker ca.crt
    shell: cat /tmp/asb-cert/cert.pem
    register: ca_cert_data
    when: asb_ca_cert is not defined

  - name: Creating asb-tls secret
    shell: kubectl create secret tls asb-tls --cert="/tmp/asb-cert/cert.pem" --key="/tmp/asb-cert/key.pem"

  - name: Waiting 10 minutes for ASB pod
    action:
      shell "{{ kubectl_cmd }}" get pods | grep -iEm1 "asb.*?running" | grep -v deploy
    register: wait_for_asb_pod
    until: wait_for_asb_pod.rc == 0
    retries: 60
    delay: 10

  - name: Get endpoint for ansible-service-broker
    shell: "'{{ kubectl_cmd }}' get endpoints | grep asb | awk '{print $2}'"
    register: result_get_endpoint_asb
    retries: 6
    delay: 10

  - set_fact:
      ansible_service_broker_resource_file: "ansible_service_broker.yaml.j2"

  - set_fact:
      broker_ca_cert: "{{ ca_cert_data.stdout | b64encode }}"

  - set_fact:
      broker_auth: '{ "bearer": { "secretRef": { "kind": "Secret", "namespace": "ansible-service-broker", "name": "ansibleservicebroker-client" } } }'

  - name: Creating /tmp/ansible_service_broker.yaml
    template:
      src: "{{ ansible_service_broker_resource_file }}"
      dest: /tmp/ansible_service_broker.yaml
      owner: "{{ ansible_env.USER }}"
      mode: 0644
    register: ansible_service_broker_template

  - name: Create Broker resource in Service Catalog
    shell: "{{ kubectl_cmd }} create -f /tmp/ansible_service_broker.yaml"
